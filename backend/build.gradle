plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id("org.springdoc.openapi-gradle-plugin") version "1.6.0"
	id 'com.bmuschko.docker-spring-boot-application' version '6.7.0'

}

group = 'com.virginonline'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
description = 'backend for notezen'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
	implementation 'org.projectlombok:lombok:1.18.26'
	implementation 'org.projectlombok:lombok:1.18.26'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}
openApi {
	apiDocsUrl.set("http:localhost:8080/v3/api-docs.yaml")
}
docker {
	springBootApplication {
		baseImage = 'bellsoft/liberica-openjdk-alpine-musl:17'
		ports = [9090, 8080]
		images = ['awesome-spring-boot:1.115', 'awesome-spring-boot:latest']
		jvmArgs = ['-Dspring.profiles.active=production', '-Xmx2048m']
	}
}
tasks.named('test') {
	useJUnitPlatform()
}
